/* 
 * Copyright 2009-2010 junithelper.org. 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
 * either express or implied. See the License for the specific language 
 * governing permissions and limitations under the License. 
 */
package org.junithelper.core.config;

import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import org.junithelper.core.util.Assertion;

public class MessageValue {

    private Properties props;

    public void initialize(String lang) {
        if (lang == null || lang.equals("")) {
            lang = "en";
        }
        InputStream is = this.getClass().getClassLoader().getResourceAsStream(
                "junithelper-core_" + lang + ".properties");
        try {
            props = new Properties();
            props.load(is);
        } catch (IOException e) {
            try {
                props.load(this.getClass().getClassLoader().getResourceAsStream("junithelper-core_en.properties"));
            } catch (Exception e2) {
            }
        }
    }

    String get(String key) {
        Assertion.on("key").mustNotBeEmpty(key);
        if (props == null) {
            initialize(null);
        }
        return props.getProperty(key);
    }

    public String getAutoGeneratedTODOMessage() {
        return get(MessageKey.AutoGeneratedTODOMessage);
    }

    public String getExpectedExceptionNotThrownMessage() {
        return get(MessageKey.ExpectedExceptionNotThrownMessage);
    }

    public String getExempliGratia() {
        return get(MessageKey.ExempliGratia);
    }

}
